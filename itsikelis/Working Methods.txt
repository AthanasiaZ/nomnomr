nomnomr Working Methods

Για την εκπόνηση του έργου, η ομάδα μας θα χρησιμοποιήσει τη μέθοδο Kanban, τροποποιημένη
ελάχιστα για τις ανάγκες της ομάδας. Η επιλογή αυτή ελήφθη κατά την πρώτη μας οργανωτική
συνάντηση. Καθώς μερικά μέλη της ομάδας μας δεν είχαν πρότερη εμπειρία σε Agile μεθοδολογίες,
θεωρήθηκε πως η Kanban είναι βέλτιστη, διότι αποτελεί μία μέθοδο intuitive by design. Η
λειτουργικότητά της κατανοείται άμεσα με την προβολή του πίνακα και δεν απαιτεί κατανόηση
όρων όπως Sprint, Product Owner και Scrum Master. Διευκολύνεται και επιταχύνεται έτσι η
διαδικασία έναρξης της εκπόνησης του έργου.

 Η ομάδα θα έχει έναν Υπεύθυνο Έργου (διαφορετικό σε κάθε παραδοτέο, έτσι ώστε να αποκτήσουν
όλα τα μέλη εμπειρία από team management), δουλειά του οποίου είναι να καθορίζει τα tasks για
το εκάστοτε παραδοτέο, να δημιουργεί τις καρτέλες στον πίνακα της Kanban και να ισομοιράζει τα
tasks στα μέλη, όπως κρίνει αυτός, σύμφωνα με τις ικανότητες και τον απαιτούμενο χρόνο
διεκπεραίωσης του task.

 Μόλις ένα task ολοκληρωθεί, ορίζεται προς Review και ελέγχεται από όλα τα μέλη σε μία
συνάντηση που πραγματοποιείται πριν την σύνταξη και αποστολή των κειμένων του εκάστοτε
παραδοτέου.

 Την σύνταξη και την συνοχή των τελικών αναφορών αναλαμβάνει ο Stylistics Manager, ο οποίος
λαμβάνει τα κείμενα και τα διαγράμματα που έχουν περάσει από review και αναλαμβάνει την
ένταξή τους σε τελικές ομοιόμορφες αναφορές

Για την ευκολότερη οργάνωση των κομματιών των αναφορών που παράγει το κάθε μέλος, αποφασίστηκε 
μία δομή φακέλων στο GitHub που έχει ως εξής:
Το κάθε μέλος της ομάδας έχει έναν φάκελο στο κύριο Repository, στον οποίο οργανώνει, 
με τρόπο τον οποίο εξηγεί στο αρχείο Description.txt τα παραδοτέα της δουλειάς που έχει 
κάνει έως τώρα.
Αυτό διευκολύνει τη δουλειά του Stylistics Manager, ο οποίος μπορεί να βλέπει αναλυτικά
την δουλειά που έχει κάνει το κάθε μέλος για την εκάστοτε αναφορά προς παράδοση, να προτείνει
διορθώσεις και να την εντάσσει στην τελική έκδοση του παραδοτέου.

Για την συγγραφή του κώδικα, αποφασίστηκε να χρησιμοποιηθούν ορισμένες τεχνικές της Extreme Programming (XP)
μεθοδολογίας, κατά την διάρκεια συγγραφής κώδικα του έργου:
- Stories: Οι προγραμματιστές θα αποφασίζουν σε μία συνάντηση το story που θα υλοποιηθεί
και τον χρόνο που απαιτείται για αυτό, πάντα σεβόμενοι τον αρχικό χρονοπρογραμματισμό
των διαγραμμάτων Gantt.
- Continuous Integration: Μετά από την υλοποίηση του κάθε story, ο κώδικας θα
ενσωματώνεται στην τελική έκδοση του προγράμματος και θα ελέγχεται αμέσως, για τον
αμεσότερο εντοπισμό σφαλμάτων.
- Pair Programming: Θα χρησιμοποιηθεί η τεχνική του Pair Programming, για την
περαιτέρω αποφυγή λαθών και ασαφειών κατά την συγγραφή καίριων κομματιών του
λογισμικού (four eyes are better than two). Η τεχνική αυτή θα πραγματοποιείται κατά
προτίμηση με φυσική παρουσία του ζευγαριού, όποτε αυτό είναι εφικτό.
- Energized Work: Οι ώρες που θα αναπτύσσεται ο κώδικας θα είναι ώρες που οι
προγραμματιστές έχουν καθαρό μυαλό και μπορούν να συγκεντρωθούν, για την αποφυγή
λαθών που οφείλονται σε νοητική κόπωση. Αυτές θα καθορίζονται από τους ίδιους τους
προγραμματιστές και τα συνεργαζόμενα ζευγάρια, πάντα όμως σεβόμενοι τα deadlines των
stories και των παραδοτέων.
 